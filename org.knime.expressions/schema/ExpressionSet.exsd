<?xml version='1.0' encoding='UTF-8'?>
<!-- Schema file written by PDE -->
<schema targetNamespace="org.knime.expressions.ExpressionSet" xmlns="http://www.w3.org/2001/XMLSchema">
<annotation>
      <appinfo>
         <meta.schema plugin="org.knime.expressions.ExpressionSet" id="ExpressionSet" name="ExpressionSet"/>
      </appinfo>
      <documentation>
         Extension point to add pre-defined Expressions written as methods. The registered expressions, which are bundled by an ExpressionSet, will be available to the user and, if necessary, appended to the user&apos;s script during compilation.
      </documentation>
   </annotation>

   <element name="extension">
      <annotation>
         <appinfo>
            <meta.element />
         </appinfo>
      </annotation>
      <complexType>
         <sequence minOccurs="1" maxOccurs="unbounded">
            <element ref="expressionSet"/>
         </sequence>
         <attribute name="point" type="string" use="required">
            <annotation>
               <documentation>
                  
               </documentation>
            </annotation>
         </attribute>
      </complexType>
   </element>

   <element name="expressionSet">
      <annotation>
         <documentation>
            Registers a custom ExpressionSet.
         </documentation>
      </annotation>
      <complexType>
         <attribute name="expressionSet" type="string" use="required">
            <annotation>
               <documentation>
                  The concrete ExpressionSet implementation.
               </documentation>
               <appinfo>
                  <meta.attribute kind="java" basedOn=":org.knime.expressions.ExpressionSet"/>
               </appinfo>
            </annotation>
         </attribute>
      </complexType>
   </element>

   <annotation>
      <appinfo>
         <meta.section type="since"/>
      </appinfo>
      <documentation>
         3.6.0
      </documentation>
   </annotation>

   <annotation>
      <appinfo>
         <meta.section type="examples"/>
      </appinfo>
      <documentation>
         [Enter extension point usage example here.]
      </documentation>
   </annotation>

   <annotation>
      <appinfo>
         <meta.section type="apiinfo"/>
      </appinfo>
      <documentation>
         [Enter API information here.]
      </documentation>
   </annotation>

   <annotation>
      <appinfo>
         <meta.section type="implementation"/>
      </appinfo>
      <documentation>
         [Enter information about supplied implementation of this extension point.]
      </documentation>
   </annotation>


</schema>
